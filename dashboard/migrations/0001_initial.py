# Generated by Django 5.2.1 on 2025-10-22 13:13

import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Ecole',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=255, unique=True, verbose_name="Nom de l'École")),
                ('code', models.CharField(max_length=20, unique=True, verbose_name='Code École')),
                ('adresse', models.CharField(blank=True, max_length=255, null=True)),
                ('telephone', models.CharField(blank=True, max_length=50, null=True)),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('logo', models.ImageField(blank=True, null=True, upload_to='ecoles/logos/', verbose_name="Logo de l'École")),
                ('directeur', models.CharField(blank=True, max_length=255, null=True, verbose_name='Nom du Directeur')),
                ('date_creation', models.DateField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'École',
                'verbose_name_plural': 'Écoles',
                'ordering': ['nom'],
            },
        ),
        migrations.CreateModel(
            name='EcoleSettings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('unique_instance', models.BooleanField(default=True, editable=False, unique=True)),
                ('ministere', models.CharField(blank=True, help_text='Exemple : Ministère de l’Éducation Nationale', max_length=255, null=True, verbose_name='Ministère de Tutelle')),
                ('academie', models.CharField(blank=True, help_text='Exemple : Académie de Bamako Rive Droite', max_length=255, null=True, verbose_name='Académie / Inspection')),
                ('commune', models.CharField(blank=True, help_text='Exemple : Commune IV du District de Bamako', max_length=255, null=True, verbose_name='Commune')),
                ('nom_etablissement', models.CharField(max_length=255, verbose_name="Nom de l'Établissement")),
                ('adresse_etablissement', models.CharField(blank=True, max_length=255, null=True, verbose_name='Adresse')),
                ('telephone', models.CharField(blank=True, max_length=50, null=True, verbose_name="Téléphone de l'Établissement")),
                ('email_contact', models.EmailField(blank=True, max_length=254, null=True, verbose_name='Email de Contact')),
                ('site_web', models.URLField(blank=True, null=True, verbose_name='Site Web')),
                ('code_etablissement', models.CharField(blank=True, help_text='Code attribué par le ministère ou la direction académique', max_length=50, null=True, verbose_name="Code de l'Établissement")),
                ('logo', models.ImageField(blank=True, null=True, upload_to='settings/assets/', verbose_name="Logo de l'École")),
                ('cachet_admin', models.ImageField(blank=True, null=True, upload_to='settings/assets/', verbose_name="Cachet (Sceau) de l'Administration")),
                ('signature_directeur', models.ImageField(blank=True, null=True, upload_to='settings/assets/', verbose_name='Signature du Directeur/Responsable')),
                ('titre_signataire', models.CharField(default='Le Directeur', max_length=100, verbose_name='Titre du Signataire')),
                ('nom_signataire', models.CharField(blank=True, help_text='Nom du directeur ou responsable signataire', max_length=255, null=True, verbose_name='Nom du Signataire')),
                ('date_mise_a_jour', models.DateTimeField(auto_now=True, verbose_name='Dernière mise à jour')),
            ],
            options={
                'verbose_name': "Paramètre de l'École",
                'verbose_name_plural': "Paramètres de l'École",
            },
        ),
        migrations.CreateModel(
            name='AnneeScolaire',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('annee', models.CharField(max_length=9, unique=True, verbose_name='Année Scolaire')),
                ('date_debut', models.DateField(verbose_name='Date de Début')),
                ('date_fin', models.DateField(verbose_name='Date de Fin')),
                ('active', models.BooleanField(default=True, verbose_name='Active (Année en cours)')),
                ('ecole', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dashboard.ecole')),
            ],
            options={
                'verbose_name': 'Année Scolaire',
                'verbose_name_plural': 'Années Scolaires',
                'ordering': ['-annee'],
            },
        ),
        migrations.CreateModel(
            name='Enseignant',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=100, verbose_name='Nom')),
                ('prenom', models.CharField(max_length=100, verbose_name='Prénom')),
                ('contact', models.CharField(blank=True, max_length=50, null=True, verbose_name='Contact Téléphonique')),
                ('email', models.EmailField(blank=True, max_length=254, null=True, verbose_name='Adresse Email')),
                ('ecole', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dashboard.ecole')),
                ('user', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Utilisateur Django')),
            ],
            options={
                'verbose_name': 'Enseignant',
                'verbose_name_plural': 'Enseignants',
                'ordering': ['nom', 'prenom'],
            },
        ),
        migrations.CreateModel(
            name='Classe',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom_classe', models.CharField(max_length=100, verbose_name='Nom de la Classe')),
                ('niveau', models.CharField(choices=[('1AP', '1ère Année Fondamentale'), ('2AP', '2ème Année Fondamentale'), ('3AP', '3ème Année Fondamentale'), ('4AP', '4ème Année Fondamentale'), ('5AP', '5ème Année Fondamentale'), ('6AP', '6ème Année Fondamentale'), ('7AP', '7ème Année Fondamentale'), ('8AP', '8ème Année Fondamentale'), ('9AP', '9ème Année Fondamentale'), ('1AS', '1ère Année Secondaire'), ('2AS', '2ème Année Secondaire'), ('TL', 'Terminale L'), ('TS', 'Terminale S'), ('TC', 'Terminale C')], max_length=50, verbose_name='Niveau Scolaire')),
                ('serie', models.CharField(blank=True, max_length=50, null=True, verbose_name='Série (pour le Secondaire)')),
                ('effectif', models.PositiveIntegerField(default=0)),
                ('annee_scolaire', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dashboard.anneescolaire', verbose_name='Année Scolaire')),
                ('ecole', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dashboard.ecole')),
                ('enseignant_principal', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='classes_principales', to='dashboard.enseignant', verbose_name='Enseignant Principal')),
            ],
            options={
                'verbose_name': 'Classe',
                'verbose_name_plural': 'Classes',
                'ordering': ['annee_scolaire', 'niveau', 'nom_classe'],
                'unique_together': {('nom_classe', 'annee_scolaire')},
            },
        ),
        migrations.CreateModel(
            name='Etudiant',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=100, verbose_name='Nom')),
                ('prenom', models.CharField(max_length=100, verbose_name='Prénom(s)')),
                ('date_naissance', models.DateField(verbose_name='Date de Naissance')),
                ('lieu_naissance', models.CharField(blank=True, max_length=100, null=True, verbose_name='Lieu de Naissance')),
                ('genre', models.CharField(choices=[('M', 'Masculin'), ('F', 'Féminin')], max_length=1, verbose_name='Sexe')),
                ('nationalite', models.CharField(default='Malienne', max_length=50, verbose_name='Nationalité')),
                ('adresse', models.CharField(blank=True, max_length=200, null=True, verbose_name='Adresse Résidentielle')),
                ('ville', models.CharField(default='Bamako', max_length=100, verbose_name='Ville')),
                ('contact_parent', models.CharField(blank=True, max_length=50, null=True, verbose_name='Contact Parent/Tuteur')),
                ('email_parent', models.EmailField(blank=True, max_length=254, null=True, verbose_name='Email Parent/Tuteur')),
                ('numero_matricule', models.CharField(blank=True, max_length=50, null=True, unique=True, verbose_name='Numéro Matricule')),
                ('date_inscription', models.DateField(default=django.utils.timezone.now, verbose_name="Date d'Inscription")),
                ('photo_profil', models.ImageField(blank=True, null=True, upload_to='photos_profil_eleves/', verbose_name='Photo de Profil')),
                ('statut', models.CharField(choices=[('Actif', 'Actif'), ('Ancien', 'Ancien'), ('Suspendu', 'Suspendu'), ('Radié', 'Radié')], default='Actif', max_length=20, verbose_name='Statut Actuel')),
                ('annee_scolaire_inscription', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dashboard.anneescolaire', verbose_name="Année d'Inscription")),
                ('classe', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='dashboard.classe', verbose_name='Classe Actuelle')),
                ('ecole', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dashboard.ecole')),
            ],
            options={
                'verbose_name': 'Élève',
                'verbose_name_plural': 'Élèves',
                'ordering': ['classe__nom_classe', 'nom', 'prenom'],
            },
        ),
        migrations.CreateModel(
            name='DossierInscriptionImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='dossiers_inscription/', verbose_name='Fichier (Image ou PDF)')),
                ('description', models.CharField(blank=True, max_length=255, null=True, verbose_name='Description du document')),
                ('date_telechargement', models.DateTimeField(auto_now_add=True, verbose_name='Date de Téléchargement')),
                ('ecole', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dashboard.ecole')),
                ('etudiant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='dossier_images', to='dashboard.etudiant', verbose_name='Élève')),
            ],
            options={
                'verbose_name': "Document d'Inscription",
                'verbose_name_plural': "Documents d'Inscription",
                'ordering': ['etudiant', 'description'],
            },
        ),
        migrations.CreateModel(
            name='Matiere',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=100, unique=True, verbose_name='Nom de la Matière')),
                ('code_matiere', models.CharField(blank=True, max_length=10, null=True, unique=True, verbose_name='Code Matière')),
                ('ecole', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dashboard.ecole')),
            ],
            options={
                'verbose_name': 'Matière',
                'verbose_name_plural': 'Matières',
                'ordering': ['nom'],
            },
        ),
        migrations.AddField(
            model_name='enseignant',
            name='specialite',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='enseignants_specialises', to='dashboard.matiere', verbose_name='Spécialité/Matière principale'),
        ),
        migrations.CreateModel(
            name='Paiement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('montant', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Montant Payé (FCFA)')),
                ('montant_du', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Montant Total Dû')),
                ('date_paiement', models.DateField(default=django.utils.timezone.now, verbose_name='Date du Paiement')),
                ('motif_paiement', models.CharField(choices=[('Frais de Scolarité', 'Frais de Scolarité'), ("Frais d'Inscription", "Frais d'Inscription"), ('Cotisation APEM', 'Cotisation APEM'), ('Tenue Scolaire', 'Tenue Scolaire'), ('Repas Scolaire', 'Repas Scolaire'), ('Autres', 'Autres')], max_length=100, verbose_name='Motif du Paiement')),
                ('statut', models.CharField(choices=[('Payé', 'Payé'), ('Impayé', 'Impayé'), ('Partiel', 'Partiel')], default='Payé', max_length=20, verbose_name='Statut du Paiement')),
                ('mode_paiement', models.CharField(choices=[('Espèces', 'Espèces'), ('Chèque', 'Chèque'), ('Virement Bancaire', 'Virement Bancaire'), ('Mobile Money', 'Mobile Money')], max_length=50, verbose_name='Mode de Paiement')),
                ('recu_numero', models.CharField(blank=True, max_length=50, null=True, unique=True, verbose_name='Numéro de Reçu')),
                ('annee_scolaire', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dashboard.anneescolaire', verbose_name='Année Scolaire Concernée')),
                ('ecole', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dashboard.ecole')),
                ('enregistre_par', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='Enregistré par')),
                ('etudiant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dashboard.etudiant', verbose_name='Élève')),
            ],
            options={
                'verbose_name': 'Paiement',
                'verbose_name_plural': 'Paiements',
                'ordering': ['-date_paiement', 'etudiant__nom'],
            },
        ),
        migrations.CreateModel(
            name='Personnel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=100, verbose_name='Nom')),
                ('prenom', models.CharField(max_length=100, verbose_name='Prénom')),
                ('contact', models.CharField(blank=True, max_length=50, null=True, verbose_name='Contact Téléphonique')),
                ('email', models.EmailField(blank=True, max_length=254, null=True, verbose_name='Adresse Email')),
                ('ecole', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dashboard.ecole')),
                ('specialite_matiere', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='personnel_specialise', to='dashboard.matiere', verbose_name='Spécialité/Matière principale')),
                ('user', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Utilisateur Django')),
            ],
            options={
                'verbose_name': 'Personnel',
                'verbose_name_plural': 'Personnel',
                'ordering': ['nom', 'prenom'],
            },
        ),
        migrations.CreateModel(
            name='CertificatFrequentation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_delivrance', models.DateField(default=django.utils.timezone.now, verbose_name='Date de Délivrance')),
                ('numero_certificat', models.CharField(blank=True, max_length=50, null=True, unique=True, verbose_name='Numéro du Certificat')),
                ('fichier_pdf', models.FileField(blank=True, null=True, upload_to='certificats_frequentation/', verbose_name='Fichier PDF du Certificat')),
                ('cachet_utilise', models.FileField(blank=True, null=True, upload_to='certificats/assets/', verbose_name='Cachet (Sceau) utilisé')),
                ('signature_utilisee', models.FileField(blank=True, null=True, upload_to='certificats/assets/', verbose_name='Signature utilisée')),
                ('ministere', models.CharField(default='MINISTÈRE DE L’ENSEIGNEMENT SUPÉRIEUR ET DE LA RECHERCHE SCIENTIFIQUE', max_length=255, verbose_name='Ministère de tutelle')),
                ('academie', models.CharField(default='Académie de Bamako Rive Droite', max_length=255, verbose_name='Académie / CAP')),
                ('etablissement_reference', models.CharField(default='Complexe Scolaire Privé de Banankabougou', max_length=255, verbose_name='Nom de l’établissement complet')),
                ('adresse_etablissement', models.CharField(default='Banankabougou, Bamako - Mali', max_length=255, verbose_name='Adresse complète de l’établissement')),
                ('mention_legale', models.TextField(blank=True, help_text='Ex : Ce certificat est délivré sous la responsabilité du Directeur et ne peut être reproduit sans autorisation.', null=True, verbose_name='Mention légale ou texte additionnel')),
                ('qr_code', models.ImageField(blank=True, null=True, upload_to='certificats/qrcodes/', verbose_name='QR Code de vérification')),
                ('code_verification', models.CharField(blank=True, max_length=100, null=True, unique=True, verbose_name='Code de vérification du document')),
                ('statut', models.CharField(choices=[('valide', 'Valide'), ('annule', 'Annulé'), ('archive', 'Archivé')], default='valide', max_length=20, verbose_name='Statut du certificat')),
                ('remarque', models.TextField(blank=True, null=True, verbose_name='Remarque administrative')),
                ('annee_scolaire', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dashboard.anneescolaire', verbose_name='Année Scolaire')),
                ('delivre_par', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='Délivré par')),
                ('ecole', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dashboard.ecole')),
                ('etudiant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dashboard.etudiant', verbose_name='Élève')),
            ],
            options={
                'verbose_name': 'Certificat de Fréquentation',
                'verbose_name_plural': 'Certificats de Fréquentation',
                'ordering': ['-annee_scolaire', 'etudiant__nom'],
                'unique_together': {('etudiant', 'annee_scolaire')},
            },
        ),
        migrations.CreateModel(
            name='EmploiDuTemps',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('jour', models.CharField(choices=[('Lundi', 'Lundi'), ('Mardi', 'Mardi'), ('Mercredi', 'Mercredi'), ('Jeudi', 'Jeudi'), ('Vendredi', 'Vendredi'), ('Samedi', 'Samedi')], max_length=20, verbose_name='Jour de la Semaine')),
                ('heure_debut', models.TimeField(verbose_name='Heure de Début')),
                ('heure_fin', models.TimeField(verbose_name='Heure de Fin')),
                ('emploiDuTemps', models.FileField(blank=True, null=True, upload_to='emploiDuTemps/', verbose_name='Fichier PDF demploi')),
                ('annee_scolaire', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dashboard.anneescolaire', verbose_name='Année Scolaire')),
                ('classe', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='emplois_du_temps', to='dashboard.classe', verbose_name='Classe')),
                ('ecole', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dashboard.ecole')),
                ('enseignant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dashboard.enseignant', verbose_name='Enseignant')),
                ('matiere', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dashboard.matiere', verbose_name='Matière')),
            ],
            options={
                'verbose_name': 'Emploi du Temps',
                'verbose_name_plural': 'Emplois du Temps',
                'ordering': ['classe', 'annee_scolaire', 'jour', 'heure_debut'],
                'unique_together': {('classe', 'jour', 'heure_debut', 'heure_fin', 'annee_scolaire')},
            },
        ),
        migrations.CreateModel(
            name='Note',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('valeur', models.DecimalField(decimal_places=2, max_digits=4, verbose_name='Note Obtenue (sur 20)')),
                ('periode_evaluation', models.CharField(choices=[('Trimestre 1', 'Trimestre 1'), ('Trimestre 2', 'Trimestre 2'), ('Trimestre 3', 'Trimestre 3'), ('Annuelle', 'Annuelle')], max_length=20, verbose_name="Période d'Évaluation")),
                ('type_evaluation', models.CharField(blank=True, max_length=50, null=True, verbose_name="Type d'Évaluation")),
                ('date_evaluation', models.DateField(default=django.utils.timezone.now, verbose_name="Date de l'Évaluation")),
                ('annee_scolaire', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dashboard.anneescolaire', verbose_name='Année Scolaire')),
                ('ecole', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dashboard.ecole')),
                ('etudiant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dashboard.etudiant', verbose_name='Élève')),
                ('matiere', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dashboard.matiere', verbose_name='Matière')),
            ],
            options={
                'verbose_name': 'Note',
                'verbose_name_plural': 'Notes',
                'ordering': ['annee_scolaire', 'etudiant', 'periode_evaluation', 'matiere__nom'],
                'unique_together': {('etudiant', 'matiere', 'periode_evaluation', 'annee_scolaire')},
            },
        ),
        migrations.CreateModel(
            name='Presence',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(verbose_name='Date de la Présence')),
                ('statut', models.CharField(choices=[('Présent', 'Présent'), ('Absent', 'Absent'), ('Retard', 'Retard'), ('Excusé', 'Excusé')], max_length=20, verbose_name='Statut')),
                ('heure_debut_cours', models.TimeField(blank=True, null=True, verbose_name='Heure de Début du Cours')),
                ('heure_fin_cours', models.TimeField(blank=True, null=True, verbose_name='Heure de Fin du Cours')),
                ('motif_absence_retard', models.TextField(blank=True, null=True, verbose_name='Motif (si absent/retard)')),
                ('justificatif_fourni', models.BooleanField(default=False, verbose_name='Justificatif Fourni ?')),
                ('annee_scolaire', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dashboard.anneescolaire', verbose_name='Année Scolaire')),
                ('classe', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dashboard.classe', verbose_name='Classe concernée')),
                ('ecole', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dashboard.ecole')),
                ('enregistre_par', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='Enregistré par')),
                ('etudiant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dashboard.etudiant', verbose_name='Élève')),
                ('matiere', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='dashboard.matiere', verbose_name='Matière (optionnel)')),
            ],
            options={
                'verbose_name': 'Présence',
                'verbose_name_plural': 'Présences',
                'ordering': ['-date', 'classe__nom_classe', 'etudiant__nom'],
                'unique_together': {('etudiant', 'date', 'matiere', 'annee_scolaire')},
            },
        ),
        migrations.CreateModel(
            name='ProgrammeMatiere',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('coefficient', models.IntegerField(default=1, verbose_name='Coefficient')),
                ('classe', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dashboard.classe', verbose_name='Classe')),
                ('enseignant', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='dashboard.enseignant', verbose_name='Enseignant de la matière')),
                ('matiere', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dashboard.matiere', verbose_name='Matière')),
            ],
            options={
                'verbose_name': 'Programme Matière par Classe',
                'verbose_name_plural': 'Programmes Matières par Classe',
                'ordering': ['classe', 'matiere__nom'],
                'unique_together': {('classe', 'matiere')},
            },
        ),
    ]
